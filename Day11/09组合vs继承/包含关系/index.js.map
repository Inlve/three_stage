{"version":3,"sources":["index.jsx"],"names":["FancyBorder","props","color","children","div","React","Component","WelcomeDialog","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;;;;;;;;;IAAMA,W;;;;;;;;;;;;;6BACQ;AACN;AACA;AACA,aACI;AAAK,QAAA,SAAS,EAAI,6BAA6B,KAAKC,KAAL,CAAWC;AAA1D,SACK,KAAKD,KAAL,CAAWE,QADhB,EAEI,iCAAM,KAAKF,KAAL,CAAWG,GAAjB,CAFJ,CADJ;AAMH;;;;EAVqBC,KAAK,CAACC,S;;IAa1BC,a;;;;;;;;;;;;;6BACQ;AACN,aACI;AACA,4BAAC,WAAD;AAAa,UAAA,KAAK,EAAG,MAArB;AACa,UAAA,GAAG,EAAI;AADpB,WAEI;AAAI,UAAA,SAAS,EAAG;AAAhB,qBAFJ,EAKI;AAAG,UAAA,SAAS,EAAG;AAAf,oDALJ;AAFJ;AAYH;;;;EAduBF,KAAK,CAACC,S;;AAkBlCE,QAAQ,CAACC,MAAT,CACI,oBAAC,aAAD,OADJ,EAEIC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["class FancyBorder extends React.Component {\r\n    render () {\r\n        // 通过children  来将子组件传递到渲染结果中\r\n        // 或者可以预留下prop\r\n        return (\r\n            <div className = {'FancyBorder FacnyBorder-' + this.props.color}>\r\n                {this.props.children}\r\n                <div>{this.props.div}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass WelcomeDialog extends React.Component {\r\n    render () {\r\n        return (\r\n            // <FancyBorder></FancyBorder>中的子组件的内容会被传递到FancyBorder的children中\r\n            <FancyBorder color = \"bule\"\r\n                         div = {<p>这是通过预留的div prop插入的内容</p>}>\r\n                <h1 className = \"Dialog-title\">\r\n                    Welcome\r\n                </h1>\r\n                <p className = \"Dialog-message\">\r\n                    Thank you for visiting our spacecraft!\r\n                </p>\r\n            </FancyBorder>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(\r\n    <WelcomeDialog />,\r\n    document.getElementById('root')\r\n);"],"file":"index.js"}